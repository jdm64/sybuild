import "deptree.syp";

int runCmd(cstr cmd)
{
	writeTo(cmd, stdout);
	writeTo("\n", stdout);
	fflush(stdout);
	auto pf = popen(cmd, "r");
	List<cstring> lines;
	readToLines(pf, lines, true);
	auto r = pclose(pf);
	fflush(stdout);
	return r;
}

class Builder
{
	struct this {
		cstring outfile, ofiles;
		DepTree deptree;
		bool rebuild;
	}

	this() outfile{"out.bin"}, ofiles{}, rebuild{false}
	{}

	bool parse(int argc, @[]cstr argv)
	{
		for (int i = 1; i < argc; i++) {
			if (!strcmp("-o", argv[i]) && i + 1 < argc) {
				outfile = argv[++i];
				continue;
			}
			deptree.addFile(argv[i]);
			if (deptree.errors)
				return true;
		}
		return false;
	}

	int run()
	{
		return deptree.runLinker(outfile);
	}
}

int main(int argc, @[]cstr argv)
{
	if (argc < 2) {
		writeTo("no arguments provided\n", stdout);
		return -1;
	}

	Builder builder;
	auto r = builder.parse(argc, argv);
	if (!r)
		r = builder.run();
	return r;
}
