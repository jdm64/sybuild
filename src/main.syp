import "cstring.syp";

opaque FILE;

@FILE popen(StrPtr cmd, StrPtr type);

int pclose(@FILE stream);

int fread(@void ptr, int size, int count, @FILE stream);

int fwrite(@void ptr, int size, int count, @FILE stream);

@FILE stdout;

void write(StrPtr str, @FILE stream)
{
	fwrite(str, 1, strlen(str), stream);
}

void readOutput(@FILE stream)
{
	[128]int8 buf;
	int n;
	while ((n = fread(buf$, 1, sizeof buf, stream)) > 0)
		fwrite(buf$, 1, n, stdout);
}

StrPtr getOFile(StrPtr file)
{
	int i;
	for (i = strlen(file) - 1; file[i] != '.'; i--)
	{}

	cstring ofile{null};
	ofile.addRange(file, i).add(".o");

	return ofile.get();
}

int runCmd(StrPtr cmd)
{
	auto pf = popen(cmd.get(), "r");
	readOutput(pf);
	return pclose(pf);
}

int main(int argc, @[]StrPtr argv)
{
	if (argc < 2) {
		write("no arguments provided\n", stdout);
		return -1;
	}
	cstring outfile{"out.bin"}, oFiles{null};
	for (int i = 1; i < argc; i++) {
		if (!strcmp("-o", argv[i]) && i + 1 < argc) {
			outfile.set(argv[++i]);
			continue;
		}
		cstring cmd{"saphyr "};
		cmd.add(argv[i]);
		oFiles.add(getOFile(argv[i])).add(" ");

		auto r = runCmd(cmd.get());
		cmd.~this();
		if (r) {
			oFiles.~this();
			return r;
		}
	}

	cstring cmd{"clang "};
	cmd.add("-o ").add(outfile.get()).add(" ").add(oFiles.get());
	oFiles.~this();

	auto ret = runCmd(cmd.get());
	cmd.~this();

	return ret;
}
